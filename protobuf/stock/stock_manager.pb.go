// Code generated by protoc-gen-go. DO NOT EDIT.
// source: stock/stock_manager.proto

package stock_manager

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type StockPriceRequest struct {
	Symbol               string   `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StockPriceRequest) Reset()         { *m = StockPriceRequest{} }
func (m *StockPriceRequest) String() string { return proto.CompactTextString(m) }
func (*StockPriceRequest) ProtoMessage()    {}
func (*StockPriceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_stock_manager_a6a48ff3b8dc384a, []int{0}
}
func (m *StockPriceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StockPriceRequest.Unmarshal(m, b)
}
func (m *StockPriceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StockPriceRequest.Marshal(b, m, deterministic)
}
func (dst *StockPriceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StockPriceRequest.Merge(dst, src)
}
func (m *StockPriceRequest) XXX_Size() int {
	return xxx_messageInfo_StockPriceRequest.Size(m)
}
func (m *StockPriceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StockPriceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StockPriceRequest proto.InternalMessageInfo

func (m *StockPriceRequest) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

type StockPriceResponse struct {
	Symbol string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	// time to price
	Prices               map[string]*StockPrice `protobuf:"bytes,2,rep,name=prices,proto3" json:"prices,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *StockPriceResponse) Reset()         { *m = StockPriceResponse{} }
func (m *StockPriceResponse) String() string { return proto.CompactTextString(m) }
func (*StockPriceResponse) ProtoMessage()    {}
func (*StockPriceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_stock_manager_a6a48ff3b8dc384a, []int{1}
}
func (m *StockPriceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StockPriceResponse.Unmarshal(m, b)
}
func (m *StockPriceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StockPriceResponse.Marshal(b, m, deterministic)
}
func (dst *StockPriceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StockPriceResponse.Merge(dst, src)
}
func (m *StockPriceResponse) XXX_Size() int {
	return xxx_messageInfo_StockPriceResponse.Size(m)
}
func (m *StockPriceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StockPriceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StockPriceResponse proto.InternalMessageInfo

func (m *StockPriceResponse) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *StockPriceResponse) GetPrices() map[string]*StockPrice {
	if m != nil {
		return m.Prices
	}
	return nil
}

type StockPrice struct {
	Open                 float64  `protobuf:"fixed64,1,opt,name=Open,proto3" json:"Open,omitempty"`
	High                 float64  `protobuf:"fixed64,2,opt,name=High,proto3" json:"High,omitempty"`
	Low                  float64  `protobuf:"fixed64,3,opt,name=Low,proto3" json:"Low,omitempty"`
	Close                float64  `protobuf:"fixed64,4,opt,name=Close,proto3" json:"Close,omitempty"`
	Volumn               uint64   `protobuf:"varint,5,opt,name=volumn,proto3" json:"volumn,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StockPrice) Reset()         { *m = StockPrice{} }
func (m *StockPrice) String() string { return proto.CompactTextString(m) }
func (*StockPrice) ProtoMessage()    {}
func (*StockPrice) Descriptor() ([]byte, []int) {
	return fileDescriptor_stock_manager_a6a48ff3b8dc384a, []int{2}
}
func (m *StockPrice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StockPrice.Unmarshal(m, b)
}
func (m *StockPrice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StockPrice.Marshal(b, m, deterministic)
}
func (dst *StockPrice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StockPrice.Merge(dst, src)
}
func (m *StockPrice) XXX_Size() int {
	return xxx_messageInfo_StockPrice.Size(m)
}
func (m *StockPrice) XXX_DiscardUnknown() {
	xxx_messageInfo_StockPrice.DiscardUnknown(m)
}

var xxx_messageInfo_StockPrice proto.InternalMessageInfo

func (m *StockPrice) GetOpen() float64 {
	if m != nil {
		return m.Open
	}
	return 0
}

func (m *StockPrice) GetHigh() float64 {
	if m != nil {
		return m.High
	}
	return 0
}

func (m *StockPrice) GetLow() float64 {
	if m != nil {
		return m.Low
	}
	return 0
}

func (m *StockPrice) GetClose() float64 {
	if m != nil {
		return m.Close
	}
	return 0
}

func (m *StockPrice) GetVolumn() uint64 {
	if m != nil {
		return m.Volumn
	}
	return 0
}

func init() {
	proto.RegisterType((*StockPriceRequest)(nil), "StockPriceRequest")
	proto.RegisterType((*StockPriceResponse)(nil), "StockPriceResponse")
	proto.RegisterMapType((map[string]*StockPrice)(nil), "StockPriceResponse.PricesEntry")
	proto.RegisterType((*StockPrice)(nil), "StockPrice")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// StockManagerClient is the client API for StockManager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StockManagerClient interface {
	GetStockPrices(ctx context.Context, in *StockPriceRequest, opts ...grpc.CallOption) (*StockPriceResponse, error)
}

type stockManagerClient struct {
	cc *grpc.ClientConn
}

func NewStockManagerClient(cc *grpc.ClientConn) StockManagerClient {
	return &stockManagerClient{cc}
}

func (c *stockManagerClient) GetStockPrices(ctx context.Context, in *StockPriceRequest, opts ...grpc.CallOption) (*StockPriceResponse, error) {
	out := new(StockPriceResponse)
	err := c.cc.Invoke(ctx, "/StockManager/GetStockPrices", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StockManagerServer is the server API for StockManager service.
type StockManagerServer interface {
	GetStockPrices(context.Context, *StockPriceRequest) (*StockPriceResponse, error)
}

func RegisterStockManagerServer(s *grpc.Server, srv StockManagerServer) {
	s.RegisterService(&_StockManager_serviceDesc, srv)
}

func _StockManager_GetStockPrices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StockPriceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StockManagerServer).GetStockPrices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/StockManager/GetStockPrices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StockManagerServer).GetStockPrices(ctx, req.(*StockPriceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _StockManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "StockManager",
	HandlerType: (*StockManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetStockPrices",
			Handler:    _StockManager_GetStockPrices_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "stock/stock_manager.proto",
}

func init() {
	proto.RegisterFile("stock/stock_manager.proto", fileDescriptor_stock_manager_a6a48ff3b8dc384a)
}

var fileDescriptor_stock_manager_a6a48ff3b8dc384a = []byte{
	// 325 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x51, 0xcb, 0x4a, 0xc3, 0x40,
	0x14, 0x65, 0xd2, 0x07, 0x78, 0x23, 0xa2, 0xa3, 0x68, 0x5a, 0x84, 0xc6, 0xac, 0x02, 0x42, 0x82,
	0x75, 0xa1, 0xb8, 0x15, 0x1f, 0x0b, 0x45, 0x89, 0x3b, 0x37, 0x65, 0x5a, 0x86, 0x18, 0x9b, 0xce,
	0x8d, 0x99, 0x69, 0xa5, 0x5b, 0x7f, 0xc1, 0xef, 0xf0, 0x6b, 0xfc, 0x05, 0x3f, 0x44, 0xe6, 0x26,
	0xd0, 0x40, 0x75, 0x13, 0xce, 0x39, 0xf7, 0xcc, 0x99, 0xcc, 0x3d, 0xd0, 0xd3, 0x06, 0x27, 0xd3,
	0x98, 0xbe, 0xa3, 0x99, 0x50, 0x22, 0x95, 0x65, 0x54, 0x94, 0x68, 0xb0, 0x7f, 0x98, 0x22, 0xa6,
	0xb9, 0x8c, 0x45, 0x91, 0xc5, 0x42, 0x29, 0x34, 0xc2, 0x64, 0xa8, 0x74, 0x35, 0x0d, 0x8e, 0x61,
	0xe7, 0xc9, 0x1e, 0x7a, 0x2c, 0xb3, 0x89, 0x4c, 0xe4, 0xdb, 0x5c, 0x6a, 0xc3, 0xf7, 0xa1, 0xab,
	0x97, 0xb3, 0x31, 0xe6, 0x1e, 0xf3, 0x59, 0xb8, 0x91, 0xd4, 0x2c, 0xf8, 0x62, 0xc0, 0x9b, 0x6e,
	0x5d, 0xa0, 0xd2, 0xf2, 0x3f, 0x3b, 0x3f, 0x83, 0x6e, 0x61, 0x8d, 0xda, 0x73, 0xfc, 0x56, 0xe8,
	0x0e, 0x07, 0xd1, 0xfa, 0xe1, 0x88, 0x98, 0xbe, 0x52, 0xa6, 0x5c, 0x26, 0xb5, 0xbd, 0x7f, 0x0d,
	0x6e, 0x43, 0xe6, 0xdb, 0xd0, 0x9a, 0xca, 0x65, 0x1d, 0x6e, 0x21, 0x3f, 0x82, 0xce, 0x42, 0xe4,
	0x73, 0xe9, 0x39, 0x3e, 0x0b, 0xdd, 0xa1, 0xdb, 0x0c, 0xae, 0x26, 0x17, 0xce, 0x39, 0x0b, 0x0c,
	0xc0, 0x6a, 0xc0, 0x39, 0xb4, 0x1f, 0x0a, 0xa9, 0x28, 0x87, 0x25, 0x84, 0xad, 0x76, 0x9b, 0xa5,
	0x2f, 0x94, 0xc3, 0x12, 0xc2, 0xf6, 0xba, 0x3b, 0x7c, 0xf7, 0x5a, 0x24, 0x59, 0xc8, 0xf7, 0xa0,
	0x73, 0x99, 0xa3, 0x96, 0x5e, 0x9b, 0xb4, 0x8a, 0xd8, 0x67, 0x2f, 0x30, 0x9f, 0xcf, 0x94, 0xd7,
	0xf1, 0x59, 0xd8, 0x4e, 0x6a, 0x36, 0x7c, 0x85, 0x4d, 0xba, 0xf5, 0xbe, 0xaa, 0x81, 0x3f, 0xc3,
	0xd6, 0x8d, 0x34, 0xab, 0x1f, 0xd1, 0x9c, 0x47, 0x6b, 0x3b, 0xef, 0xef, 0xfe, 0xb1, 0x9c, 0x60,
	0xf0, 0xf1, 0xfd, 0xf3, 0xe9, 0xf4, 0xf8, 0x01, 0xb5, 0xb7, 0x38, 0x89, 0x53, 0x69, 0x46, 0x55,
	0xc9, 0xb4, 0xaa, 0x71, 0x97, 0x5a, 0x3c, 0xfd, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x03, 0x62, 0x6c,
	0x44, 0x00, 0x02, 0x00, 0x00,
}
